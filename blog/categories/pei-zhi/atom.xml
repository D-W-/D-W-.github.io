<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 配置 | D W]]></title>
  <link href="http://d-w-.github.io/blog/categories/pei-zhi/atom.xml" rel="self"/>
  <link href="http://d-w-.github.io/"/>
  <updated>2015-08-27T15:21:12+08:00</updated>
  <id>http://d-w-.github.io/</id>
  <author>
    <name><![CDATA[Harry]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git远程代码管理，SSH还是HTTPS]]></title>
    <link href="http://d-w-.github.io/blog/2015/04/05/gityuan-cheng-dai-ma-guan-li-,sshhuan-shi-https/"/>
    <updated>2015-04-05T07:38:50+08:00</updated>
    <id>http://d-w-.github.io/blog/2015/04/05/gityuan-cheng-dai-ma-guan-li-,sshhuan-shi-https</id>
    <content type="html"><![CDATA[<p>之前学习git的过程中就遇到了这个问题，电脑并不能使用ssh连接远程仓库，例如<code>clone git@github.com/xx.git</code> 这样的工程会失败。我就必须改成使用HTTPS协议，把连接改成 https 的，或者直接配置一个环境变量</p>

<pre><code>git config --global url."https://".insteadOf git://
</code></pre>

<p>这样处理有一个弊端，我在Ubuntu上面任何时候需要连接远程仓库，必须输入我的用户名和密码，这样有点麻烦，而SSH协议是用本地存储的公钥私钥验证的，只要配置好了就不用输入用户名密码，我决定改成SSH连接。</p>

<h2>原因</h2>

<p>电脑无法用SSH连接远程仓库的原因是SSH协议用的是22端口，但是有些防火墙会把这个端口<a href="http://stackoverflow.com/questions/7144811/git-ssh-error-connect-to-host-bad-file-number">block掉</a></p>

<h2>解决方案</h2>

<p>既然不让用22号端口，换个端口就可以了，就像上面stack overflow的解决方案一样，改用443端口，在 <code>~/.ssh/</code>
建立一个config文件，写上</p>

<pre><code>Host github.com
User git
Hostname ssh.github.com
PreferredAuthentications publickey
IdentityFile ~/.ssh/id_rsa
Port 443
</code></pre>

<p>这里还有个坑，就是建立的这个config文件不能太公开，否则git不答应，使用</p>

<pre><code>chmod go-rw ~/.ssh/config
</code></pre>

<p>这句话就是把g（group当前组）和o（other其他用户）的对config这个文件的权限去掉读和写。</p>

<h2>两个有用的文档</h2>

<ol>
<li><a href="https://help.github.com/articles/changing-a-remote-s-url/">git里面用命令行更改远程仓库的URL/使用的协议</a></li>
<li><a href="https://help.github.com/articles/using-ssh-over-the-https-port/">用https的端口（443）代替被封掉的ssh端口（22）</a></li>
</ol>


<h2>后续</h2>

<p>修改完这些。。我以为一切都结束了，可视连接远程仓库还是连接不上，这时候我发现在我项目目录下的 <code>.git/config</code> 里面，远程仓库的地址写的是<code>git://github.com/xxx.git</code>,并不是ssh里面标明的 <code>git@github.com/xx.git</code> 的形式。
那么问题来了，<code>git://</code> 和 <code>git@</code>有什么区别？
进过一番查询，找到了一个<a href="http://serverfault.com/questions/189070/what-firewall-ports-need-to-be-open-to-allow-access-to-external-git-repositories">解释的比较清楚的答案</a></p>

<blockquote><p>It depends on the repository.
The native git transport uses TCP port 9418. However, git can also run
over ssh (often used for pushing), http, https, and less often others.</p>

<p>You can look at the repository URL to find out which port it uses.
Notice that many public repositories have several alternate URLs; for
instance, the kernel.org repositories have git://, <a href="http://,">http://,</a> and
<a href="https://">https://</a> URLs.</p>

<p>The common URL schemes for git repositories are:</p>

<ul>
<li>ssh:// - default port 22</li>
<li>git:// - default port 9418</li>
<li><a href="http://">http://</a> - default port 80</li>
<li><a href="https://">https://</a> - default port 443</li>
</ul>


<p>If the URL does not have a scheme, it it using ssh with a slightly
different syntax.</p>

<p>See the git fetch manpage for more details on the available URL
schemes.</p></blockquote>

<p>大体意思就是<code>git://</code>使用的是 native git协议，用的是9418端口，有些防火墙会封掉，而<code>git@</code>也就是<code>ssh:</code>用的是ssh协议，端口是22，也会被一些防火墙封掉，上面那些操作只能解决ssh连不上的问题，也就是说执行了上面的配置，只能保证git@github.com这样的远程仓库能连接，而写成git://就无法解决，解决这个，只能利用git的全局配置把所有的<code>git://</code>连接转成<code>https://</code>连接，这样就避免了使用native git协议。
<a href="http://stackoverflow.com/questions/4891527/git-protocol-blocked-by-company-how-can-i-get-around-that">这篇文章</a>对上面的问题说的挺好。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving My Blog to Octopress]]></title>
    <link href="http://d-w-.github.io/blog/2015/04/05/moving-my-blog-to-octopress/"/>
    <updated>2015-04-05T05:34:53+08:00</updated>
    <id>http://d-w-.github.io/blog/2015/04/05/moving-my-blog-to-octopress</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>最近在读侯捷老师的《STL源码剖析》一书，收获简直太大。一激动就想把学的东西赶紧记下来写篇博客，然后想到我以前的博客系统，bug无穷，于是决定亲自配一个Octopress的博客，因为之前的博客是Jekyll的，博文都用的markdown写的，Octopress也是markdown语法，这样可以直接连文字带样式轻松移植过来，想的挺轻松，但是实际操纵起来简直折腾了我好几天。。</p>

<p>在octopress上面搭建博客的过程真的是一波三折，由于原来简介的jekell模板有点问题，我决定把自己亲手重新装一个octopress的博客</p>

<h2>双系统的问题</h2>

<p>首先，由于双系统，我希望我能在任何一个系统上面写博客并同时push到github上面，由于octopress博客写完博客需要生成一下，我就不得不在两个系统上都装上生成博客需要的ruby环境和javascript环境。</p>

<p>装ruby的一些包时候遇到了一些问题，由于GRW的问题，直接从远程仓库安装安装不了，这时候需要借助<a href="http://ruby.taobao.org/">淘宝搭建的一个国内的仓库</a>，15min一更新还是很快的</p>

<p>使用如下的命令就可以了</p>

<pre><code>$ gem sources --remove https://rubygems.org/
$ gem sources -a https://ruby.taobao.org/
$ gem sources -l
*** CURRENT SOURCES ***

https://ruby.taobao.org
# 请确保只有 ruby.taobao.org
$ gem install rails
</code></pre>

<h2>博客主题的选择</h2>

<p>octopress对于主题的安装还是很简便的，调了一番，终于找了个比较中意的主题
<a href="https://github.com/martinbmadsen/classic-martinb.git">classic-martinb</a></p>

<pre><code>$ cd octopress
$ git submodule add git://github.com/fapper/classic-martinb.git .themes/classic-martinb
$ rake install['classic-martinb']
$ rake generate
</code></pre>

<h2>linux下面我的博客无法找到</h2>

<p>不知道什么原因，我的博客在linux的系统（包括我的ubuntu系统和安卓手机）的浏览器上面加载不到。。
后来我发现，我的博客域名是d-w-.github.io，在linux下面ping都无法ping通，应该是三级域名结尾是 - 的原因，我试了一下，只要结尾不是 - ，都可以ping的通。。这个问题还等后续解决，比如买个域名撘过来。。我甚至想把github的用户名给换了</p>

<h2>更改了主题或者更新了博客后 <code>rake deploy</code> 的push被rejecte</h2>

<p>这个问题一直出现，在stackoverflow上面有各式各样的解答，都可以起到作用，但是我每次deploy都要按照上面的方法执行一遍岂不是太麻烦了。。我观察了一下，原因应该是远程分支有两个，git并不知道push到哪一个的原因，又看了一下octopress的文档，有这么一句</p>

<blockquote><p>Note: With new repositories, Github sets the default branch based on the branch you push first, and it looks there for the generated site content. If you&rsquo;re having trouble getting Github to publish your site, go to the admin panel for your repository and make sure that the master branch is the default branch.</p></blockquote>

<p>看来只要master branch设为了默认分支就好了，这个是不是合适的解决方案还待后续检验。
后来经过我无数次删除repo，重装的循环，终于发现了原因。。是因为windows和Linux的换行符不一样，比如我在Linux下面初始化了一个repo，换行符是LF，然后我到了windows系统下面打开了这个项目目录，想去push，但是windows上面换行符是CRLF，这时候和远程的仓库比对，发现换行符不同。。就会被rejecte，因为git不知道用哪个好。。解决的办法在stack overflow上找到了，<a href="http://stackoverflow.com/questions/1967370/git-replacing-lf-with-crlf">只要改一下配置就好</a>，看来git确实强大。</p>

<h2>git的SSH验证和HTTPS验证</h2>

<p>由于端口的问题，我这边并没有开SSH的端口，都是采用HTTPS验证，在windows端可以直接用github的桌面版，push起来也挺轻松，但是在linux端，由于是HTTPS验证，每次push都要输入用户名和密码，这个问题待解决。</p>

<h2>对第三方主题进行更改</h2>

<p>既然折腾了就要折腾到底，单纯clone一个别人写好的主题显然不能满足我的要求，毕竟我以前的博客就有一些不错的特技。所以要对fork过来的第三方主题进行改装，来到 .theme 文件夹下面的相应的主题包里面，进行需要的修改，这里需要注意的就是修改结束之后需要再</p>

<pre><code>rake install[name]
</code></pre>

<p>一下，这样所做的修改才会生效</p>

<h2>添加多说评论系统</h2>

<p>这个比较简单，参照了<a href="http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html">为 Octopress 添加多说评论系统</a>这篇文章，需要注意的一点是文章需要在前面的yml上面注明 <code>comments: true</code> 。</p>

<h2>在文章中添加本地图片</h2>

<p>这个是因为我用了泰然网上的两个图片，没想到有防盗链。。只能下载到本地才能正常显示，当然我在文章里面注明了图片的出处，个人认为这种防盗链确实没什么必要。。
参照<a href="http://blog.csdn.net/hankai1024/article/details/12833423">Octopress在页面和内容中加入代码、图片、带标题图片方法</a>
图片放到 <code>octopress\source\images</code> 里面
通过</p>

<pre><code>    r'<img src="/images/pic_name.png">'
</code></pre>

<p>引用就可以了。</p>
]]></content>
  </entry>
  
</feed>
